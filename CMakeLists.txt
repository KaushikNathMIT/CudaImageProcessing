cmake_minimum_required(VERSION 3.6)
project(CudaImageArchitecture)
find_package(CUDA REQUIRED)
find_package(OpenCV REQUIRED)
find_package(MPI REQUIRED)
include_directories(${MPI_INCLUDE_PATH})
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "-std=c++11")

#set(SOURCE_FILES SupportingFiles/test.cu SupportingFiles/BasicFilter.cpp SupportingFiles/FaceDetectionCuda.cpp)
cuda_add_executable(cuda2 SupportingFiles/test.cu)
cuda_add_executable(cudamatmul SupportingFiles/matmul.cu)
add_executable(cudaBasicOCV SupportingFiles/BasicFilter.cpp)
add_executable(cudaFaceDetect SupportingFiles/FaceDetectionCuda.cpp)
add_executable(simpleFaceDetect SupportingFiles/FaceDetectionSimple.cpp)
add_executable(testlibrary TestLibrary.cpp)
add_library(cudaLibrary ImageProcessingLibrary/ObjectDetectCuda.h ImageProcessingLibrary/ObjectDetectCuda.cpp ImageProcessingLibrary/BasicFilterCuda.cpp ImageProcessingLibrary/BasicFilterCuda.h)
cuda_add_library(DataProcessingLibrary DataProcessingLibrary/MatrixMultiplication.cu DataProcessingLibrary/MatrixMultiplication.h DataProcessingLibrary/MatrixSearch.cu DataProcessingLibrary/MatrixSearch.h)
include_directories(${OpenCV_INCLUDE_DIRS})
target_link_libraries(cudaBasicOCV ${OpenCV_LIBS})
target_link_libraries(cudaFaceDetect ${OpenCV_LIBS})
target_link_libraries(simpleFaceDetect ${OpenCV_LIBS})
target_link_libraries(cudaLibrary ${OpenCV_LIBS})
target_link_libraries(DataProcessingLibrary ${CUDA_LIBRARIES})
target_link_libraries(testlibrary cudaLibrary)
target_link_libraries(testlibrary DataProcessingLibrary)

if (MPI_COMPILE_FLAGS)
    set_target_properties(cuda2 PROPERTIES
            COMPILE_FLAGS "${MPI_COMPILE_FLAGS}")
endif ()

if (MPI_LINK_FLAGS)
    set_target_properties(cuda2 PROPERTIES
            LINK_FLAGS "${MPI_LINK_FLAGS}")
endif ()
target_link_libraries(cuda2 ${MPI_LIBRARIES})